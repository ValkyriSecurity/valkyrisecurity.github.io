<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on VALKYRI</title><link>https://blog.valkyri.xyz/categories/tutorials/</link><description>Recent content in Tutorials on VALKYRI</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 10 Sep 2025 00:49:28 +0600</lastBuildDate><atom:link href="https://blog.valkyri.xyz/categories/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Beyond the Contract, Part 1 : The Hack That Didn’t Exploit a Smart-Contract Bug</title><link>https://blog.valkyri.xyz/posts/beyond-the-contract-part-1/</link><pubDate>Wed, 10 Sep 2025 00:49:28 +0600</pubDate><guid>https://blog.valkyri.xyz/posts/beyond-the-contract-part-1/</guid><description>In Web3, we obsess over smart contract security—audits, bounties, line-by-line code reviews. That’s essential, but it can also create a dangerous blind spot. We’re so focused on the fortress walls that we forget to lock the front door.
What if one of the biggest DeFi heists didn’t involve a smart-contract bug at all?
That’s the story of the Ronin Network and the theft of 173,600 ETH and 25.5M USDC—roughly $540M at the moment of the attack on March 23, 2022, and about $615–$625M by the time it was disclosed on March 29, 2022.</description></item><item><title>18 Popular npm Packages Hacked: 2 Billion Weekly Users at Risk</title><link>https://blog.valkyri.xyz/posts/npm-major-hack/</link><pubDate>Tue, 09 Sep 2025 23:00:00 +0530</pubDate><guid>https://blog.valkyri.xyz/posts/npm-major-hack/</guid><description>Incident On September 8, 2025, the npm ecosystem experienced a major coordinated supply-chain attack. A total of 18 widely-used JavaScript packages were compromised with malicious code designed to intercept cryptocurrency transactions in browsers. These packages collectively see over 2 billion weekly downloads, making this incident one of the most impactful attacks in open-source history.
Affected packages include:
ansi-styles@6.2.2 debug@4.4.2 chalk@5.6.1 supports-color@10.2.1 strip-ansi@7.1.1 ansi-regex@6.2.1 wrap-ansi@9.0.1 color-convert@3.1.1 color-name@2.0.1 is-arrayish@0.3.3 slice-ansi@7.1.1 color@5.0.1 color-string@2.1.1 simple-swizzle@0.</description></item><item><title>How to Hack a Web3 Wallet (Legally): A Full-Stack Pentesting Guide</title><link>https://blog.valkyri.xyz/posts/wallet-extension-pentesting/</link><pubDate>Fri, 15 Aug 2025 23:00:00 +0530</pubDate><guid>https://blog.valkyri.xyz/posts/wallet-extension-pentesting/</guid><description>INTRODUCTION Crypto wallets are the critical bridge (or gateway) between Web2 and Web3 by which you interact with web3 based dApps. . But what if the very tool you rely on has hidden security flaws? That’s a serious risk. This guide is your essential companion for uncovering bugs in crypto wallet extensions. While not exhaustive, it highlights various common areas for assessment. For Wallet security review/audits/pentest,contact us!
This guide is limited to the context of crypto wallets browser extension pentesting.</description></item></channel></rss>